{
  "version": 3,
  "sources": ["../../react-masonry-css/dist/react-masonry-css.module.js"],
  "sourcesContent": ["import React from 'react';\r\n\r\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\r\n\r\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\r\n\r\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\nconst defaultProps = {\r\n  breakpointCols: undefined,\r\n  // optional, number or object { default: number, [key: number]: number }\r\n  className: undefined,\r\n  // required, string\r\n  columnClassName: undefined,\r\n  // optional, string\r\n  // Any React children. Typically an array of JSX items\r\n  children: undefined,\r\n  // Custom attributes, however it is advised against\r\n  // using these to prevent unintended issues and future conflicts\r\n  // ...any other attribute, will be added to the container\r\n  columnAttrs: undefined,\r\n  // object, added to the columns\r\n  // Deprecated props\r\n  // The column property is deprecated.\r\n  // It is an alias of the `columnAttrs` property\r\n  column: undefined\r\n};\r\nconst DEFAULT_COLUMNS = 2;\r\n\r\nclass Masonry extends React.Component {\r\n  constructor(props) {\r\n    super(props); // Correct scope for when methods are accessed externally\r\n\r\n    this.reCalculateColumnCount = this.reCalculateColumnCount.bind(this);\r\n    this.reCalculateColumnCountDebounce = this.reCalculateColumnCountDebounce.bind(this); // default state\r\n\r\n    let columnCount;\r\n\r\n    if (this.props.breakpointCols && this.props.breakpointCols.default) {\r\n      columnCount = this.props.breakpointCols.default;\r\n    } else {\r\n      columnCount = parseInt(this.props.breakpointCols) || DEFAULT_COLUMNS;\r\n    }\r\n\r\n    this.state = {\r\n      columnCount\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.reCalculateColumnCount(); // window may not be available in some environments\r\n\r\n    if (window) {\r\n      window.addEventListener('resize', this.reCalculateColumnCountDebounce);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.reCalculateColumnCount();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (window) {\r\n      window.removeEventListener('resize', this.reCalculateColumnCountDebounce);\r\n    }\r\n  }\r\n\r\n  reCalculateColumnCountDebounce() {\r\n    if (!window || !window.requestAnimationFrame) {\r\n      // IE10+\r\n      this.reCalculateColumnCount();\r\n      return;\r\n    }\r\n\r\n    if (window.cancelAnimationFrame) {\r\n      // IE10+\r\n      window.cancelAnimationFrame(this._lastRecalculateAnimationFrame);\r\n    }\r\n\r\n    this._lastRecalculateAnimationFrame = window.requestAnimationFrame(() => {\r\n      this.reCalculateColumnCount();\r\n    });\r\n  }\r\n\r\n  reCalculateColumnCount() {\r\n    const windowWidth = window && window.innerWidth || Infinity;\r\n    let breakpointColsObject = this.props.breakpointCols; // Allow passing a single number to `breakpointCols` instead of an object\r\n\r\n    if (typeof breakpointColsObject !== 'object') {\r\n      breakpointColsObject = {\r\n        default: parseInt(breakpointColsObject) || DEFAULT_COLUMNS\r\n      };\r\n    }\r\n\r\n    let matchedBreakpoint = Infinity;\r\n    let columns = breakpointColsObject.default || DEFAULT_COLUMNS;\r\n\r\n    for (let breakpoint in breakpointColsObject) {\r\n      const optBreakpoint = parseInt(breakpoint);\r\n      const isCurrentBreakpoint = optBreakpoint > 0 && windowWidth <= optBreakpoint;\r\n\r\n      if (isCurrentBreakpoint && optBreakpoint < matchedBreakpoint) {\r\n        matchedBreakpoint = optBreakpoint;\r\n        columns = breakpointColsObject[breakpoint];\r\n      }\r\n    }\r\n\r\n    columns = Math.max(1, parseInt(columns) || 1);\r\n\r\n    if (this.state.columnCount !== columns) {\r\n      this.setState({\r\n        columnCount: columns\r\n      });\r\n    }\r\n  }\r\n\r\n  itemsInColumns() {\r\n    const currentColumnCount = this.state.columnCount;\r\n    const itemsInColumns = new Array(currentColumnCount); // Force children to be handled as an array\r\n\r\n    const items = React.Children.toArray(this.props.children);\r\n\r\n    for (let i = 0; i < items.length; i++) {\r\n      const columnIndex = i % currentColumnCount;\r\n\r\n      if (!itemsInColumns[columnIndex]) {\r\n        itemsInColumns[columnIndex] = [];\r\n      }\r\n\r\n      itemsInColumns[columnIndex].push(items[i]);\r\n    }\r\n\r\n    return itemsInColumns;\r\n  }\r\n\r\n  renderColumns() {\r\n    const {\r\n      column,\r\n      columnAttrs = {},\r\n      columnClassName\r\n    } = this.props;\r\n    const childrenInColumns = this.itemsInColumns();\r\n    const columnWidth = `${100 / childrenInColumns.length}%`;\r\n    let className = columnClassName;\r\n\r\n    if (className && typeof className !== 'string') {\r\n      this.logDeprecated('The property \"columnClassName\" requires a string'); // This is a deprecated default and will be removed soon.\r\n\r\n      if (typeof className === 'undefined') {\r\n        className = 'my-masonry-grid_column';\r\n      }\r\n    }\r\n\r\n    const columnAttributes = _objectSpread(_objectSpread(_objectSpread({}, column), columnAttrs), {}, {\r\n      style: _objectSpread(_objectSpread({}, columnAttrs.style), {}, {\r\n        width: columnWidth\r\n      }),\r\n      className\r\n    });\r\n\r\n    return childrenInColumns.map((items, i) => {\r\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, columnAttributes, {\r\n        key: i\r\n      }), items);\r\n    });\r\n  }\r\n\r\n  logDeprecated(message) {\r\n    console.error('[Masonry]', message);\r\n  }\r\n\r\n  render() {\r\n    const _this$props = this.props,\r\n          {\r\n      // ignored\r\n      children,\r\n      breakpointCols,\r\n      columnClassName,\r\n      columnAttrs,\r\n      column,\r\n      // used\r\n      className\r\n    } = _this$props,\r\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"breakpointCols\", \"columnClassName\", \"columnAttrs\", \"column\", \"className\"]);\r\n\r\n    let classNameOutput = className;\r\n\r\n    if (typeof className !== 'string') {\r\n      this.logDeprecated('The property \"className\" requires a string'); // This is a deprecated default and will be removed soon.\r\n\r\n      if (typeof className === 'undefined') {\r\n        classNameOutput = 'my-masonry-grid';\r\n      }\r\n    }\r\n\r\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\r\n      className: classNameOutput\r\n    }), this.renderColumns());\r\n  }\r\n\r\n}\r\n\r\nMasonry.defaultProps = defaultProps;\r\n\r\nexport default Masonry;\r\n"],
  "mappings": "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",
  "names": ["React"]
}
